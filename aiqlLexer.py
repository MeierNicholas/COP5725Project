# Generated from aiql.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\63")
        buf.write("\u0151\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5")
        buf.write("\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%")
        buf.write("\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3")
        buf.write(")\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3")
        buf.write(",\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3")
        buf.write(".\3.\3.\3/\3/\6/\u013e\n/\r/\16/\u013f\5/\u0142\n/\3\60")
        buf.write("\6\60\u0145\n\60\r\60\16\60\u0146\3\61\3\61\3\62\6\62")
        buf.write("\u014c\n\62\r\62\16\62\u014d\3\62\3\62\2\2\63\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\61a\62c\63\3\2\4\4\2C\\c|\5\2\13\f\17\17\"\"")
        buf.write("\2\u0154\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2")
        buf.write("\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2")
        buf.write("\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2")
        buf.write("\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3")
        buf.write("\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2")
        buf.write("-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3")
        buf.write("\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2")
        buf.write("?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2")
        buf.write("\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2")
        buf.write("\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2")
        buf.write("\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e\3")
        buf.write("\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tq\3\2\2\2\13v\3\2\2\2\r")
        buf.write("y\3\2\2\2\17|\3\2\2\2\21~\3\2\2\2\23\u0080\3\2\2\2\25")
        buf.write("\u0082\3\2\2\2\27\u0089\3\2\2\2\31\u008f\3\2\2\2\33\u0096")
        buf.write("\3\2\2\2\35\u009b\3\2\2\2\37\u009d\3\2\2\2!\u009f\3\2")
        buf.write("\2\2#\u00a2\3\2\2\2%\u00a5\3\2\2\2\'\u00a9\3\2\2\2)\u00af")
        buf.write("\3\2\2\2+\u00b8\3\2\2\2-\u00c1\3\2\2\2/\u00c8\3\2\2\2")
        buf.write("\61\u00d0\3\2\2\2\63\u00d4\3\2\2\2\65\u00d9\3\2\2\2\67")
        buf.write("\u00dd\3\2\2\29\u00e5\3\2\2\2;\u00ee\3\2\2\2=\u00f0\3")
        buf.write("\2\2\2?\u00f3\3\2\2\2A\u00f6\3\2\2\2C\u00fb\3\2\2\2E\u00fd")
        buf.write("\3\2\2\2G\u00ff\3\2\2\2I\u0101\3\2\2\2K\u0104\3\2\2\2")
        buf.write("M\u0107\3\2\2\2O\u010b\3\2\2\2Q\u010f\3\2\2\2S\u0117\3")
        buf.write("\2\2\2U\u011c\3\2\2\2W\u0121\3\2\2\2Y\u012a\3\2\2\2[\u0133")
        buf.write("\3\2\2\2]\u0141\3\2\2\2_\u0144\3\2\2\2a\u0148\3\2\2\2")
        buf.write("c\u014b\3\2\2\2ef\7c\2\2fg\7p\2\2gh\7q\2\2hi\7o\2\2ij")
        buf.write("\7c\2\2jk\7n\2\2kl\7{\2\2l\4\3\2\2\2mn\7*\2\2n\6\3\2\2")
        buf.write("\2op\7+\2\2p\b\3\2\2\2qr\7h\2\2rs\7t\2\2st\7q\2\2tu\7")
        buf.write("o\2\2u\n\3\2\2\2vw\7v\2\2wx\7q\2\2x\f\3\2\2\2yz\7c\2\2")
        buf.write("z{\7u\2\2{\16\3\2\2\2|}\7]\2\2}\20\3\2\2\2~\177\7_\2\2")
        buf.write("\177\22\3\2\2\2\u0080\u0081\7\60\2\2\u0081\24\3\2\2\2")
        buf.write("\u0082\u0083\7d\2\2\u0083\u0084\7g\2\2\u0084\u0085\7h")
        buf.write("\2\2\u0085\u0086\7q\2\2\u0086\u0087\7t\2\2\u0087\u0088")
        buf.write("\7g\2\2\u0088\26\3\2\2\2\u0089\u008a\7c\2\2\u008a\u008b")
        buf.write("\7h\2\2\u008b\u008c\7v\2\2\u008c\u008d\7g\2\2\u008d\u008e")
        buf.write("\7t\2\2\u008e\30\3\2\2\2\u008f\u0090\7y\2\2\u0090\u0091")
        buf.write("\7k\2\2\u0091\u0092\7v\2\2\u0092\u0093\7j\2\2\u0093\u0094")
        buf.write("\7k\2\2\u0094\u0095\7p\2\2\u0095\32\3\2\2\2\u0096\u0097")
        buf.write("\7y\2\2\u0097\u0098\7k\2\2\u0098\u0099\7v\2\2\u0099\u009a")
        buf.write("\7j\2\2\u009a\34\3\2\2\2\u009b\u009c\7.\2\2\u009c\36\3")
        buf.write("\2\2\2\u009d\u009e\7#\2\2\u009e \3\2\2\2\u009f\u00a0\7")
        buf.write("(\2\2\u00a0\u00a1\7(\2\2\u00a1\"\3\2\2\2\u00a2\u00a3\7")
        buf.write("~\2\2\u00a3\u00a4\7~\2\2\u00a4$\3\2\2\2\u00a5\u00a6\7")
        buf.write("t\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7v\2\2\u00a8&\3\2")
        buf.write("\2\2\u00a9\u00aa\7e\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac")
        buf.write("\7w\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae\7v\2\2\u00ae(\3")
        buf.write("\2\2\2\u00af\u00b0\7f\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2")
        buf.write("\7u\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5")
        buf.write("\7p\2\2\u00b5\u00b6\7e\2\2\u00b6\u00b7\7v\2\2\u00b7*\3")
        buf.write("\2\2\2\u00b8\u00b9\7i\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bb")
        buf.write("\7q\2\2\u00bb\u00bc\7w\2\2\u00bc\u00bd\7r\2\2\u00bd\u00be")
        buf.write("\7\"\2\2\u00be\u00bf\7d\2\2\u00bf\u00c0\7{\2\2\u00c0,")
        buf.write("\3\2\2\2\u00c1\u00c2\7j\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4")
        buf.write("\7x\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7p\2\2\u00c6\u00c7")
        buf.write("\7i\2\2\u00c7.\3\2\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca")
        buf.write("\7q\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd")
        buf.write("\7\"\2\2\u00cd\u00ce\7d\2\2\u00ce\u00cf\7{\2\2\u00cf\60")
        buf.write("\3\2\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7u\2\2\u00d2\u00d3")
        buf.write("\7e\2\2\u00d3\62\3\2\2\2\u00d4\u00d5\7f\2\2\u00d5\u00d6")
        buf.write("\7g\2\2\u00d6\u00d7\7u\2\2\u00d7\u00d8\7e\2\2\u00d8\64")
        buf.write("\3\2\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7q\2\2\u00db\u00dc")
        buf.write("\7r\2\2\u00dc\66\3\2\2\2\u00dd\u00de\7h\2\2\u00de\u00df")
        buf.write("\7q\2\2\u00df\u00e0\7t\2\2\u00e0\u00e1\7y\2\2\u00e1\u00e2")
        buf.write("\7c\2\2\u00e2\u00e3\7t\2\2\u00e3\u00e4\7f\2\2\u00e48\3")
        buf.write("\2\2\2\u00e5\u00e6\7d\2\2\u00e6\u00e7\7c\2\2\u00e7\u00e8")
        buf.write("\7e\2\2\u00e8\u00e9\7m\2\2\u00e9\u00ea\7y\2\2\u00ea\u00eb")
        buf.write("\7c\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed\7f\2\2\u00ed:\3")
        buf.write("\2\2\2\u00ee\u00ef\7<\2\2\u00ef<\3\2\2\2\u00f0\u00f1\7")
        buf.write("/\2\2\u00f1\u00f2\7@\2\2\u00f2>\3\2\2\2\u00f3\u00f4\7")
        buf.write(">\2\2\u00f4\u00f5\7/\2\2\u00f5@\3\2\2\2\u00f6\u00f7\7")
        buf.write("p\2\2\u00f7\u00f8\7w\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa")
        buf.write("\7n\2\2\u00faB\3\2\2\2\u00fb\u00fc\7>\2\2\u00fcD\3\2\2")
        buf.write("\2\u00fd\u00fe\7@\2\2\u00feF\3\2\2\2\u00ff\u0100\7?\2")
        buf.write("\2\u0100H\3\2\2\2\u0101\u0102\7>\2\2\u0102\u0103\7?\2")
        buf.write("\2\u0103J\3\2\2\2\u0104\u0105\7?\2\2\u0105\u0106\7@\2")
        buf.write("\2\u0106L\3\2\2\2\u0107\u0108\7u\2\2\u0108\u0109\7w\2")
        buf.write("\2\u0109\u010a\7o\2\2\u010aN\3\2\2\2\u010b\u010c\7c\2")
        buf.write("\2\u010c\u010d\7x\2\2\u010d\u010e\7i\2\2\u010eP\3\2\2")
        buf.write("\2\u010f\u0110\7g\2\2\u0110\u0111\7z\2\2\u0111\u0112\7")
        buf.write("g\2\2\u0112\u0113\7e\2\2\u0113\u0114\7w\2\2\u0114\u0115")
        buf.write("\7v\2\2\u0115\u0116\7g\2\2\u0116R\3\2\2\2\u0117\u0118")
        buf.write("\7h\2\2\u0118\u0119\7c\2\2\u0119\u011a\7k\2\2\u011a\u011b")
        buf.write("\7n\2\2\u011bT\3\2\2\2\u011c\u011d\7r\2\2\u011d\u011e")
        buf.write("\7t\2\2\u011e\u011f\7k\2\2\u011f\u0120\7x\2\2\u0120V\3")
        buf.write("\2\2\2\u0121\u0122\7g\2\2\u0122\u0123\7z\2\2\u0123\u0124")
        buf.write("\7r\2\2\u0124\u0125\7n\2\2\u0125\u0126\7k\2\2\u0126\u0127")
        buf.write("\7e\2\2\u0127\u0128\7k\2\2\u0128\u0129\7v\2\2\u0129X\3")
        buf.write("\2\2\2\u012a\u012b\7u\2\2\u012b\u012c\7j\2\2\u012c\u012d")
        buf.write("\7w\2\2\u012d\u012e\7v\2\2\u012e\u012f\7f\2\2\u012f\u0130")
        buf.write("\7q\2\2\u0130\u0131\7y\2\2\u0131\u0132\7p\2\2\u0132Z\3")
        buf.write("\2\2\2\u0133\u0134\7e\2\2\u0134\u0135\7q\2\2\u0135\u0136")
        buf.write("\7p\2\2\u0136\u0137\7p\2\2\u0137\u0138\7g\2\2\u0138\u0139")
        buf.write("\7e\2\2\u0139\u013a\7v\2\2\u013a\\\3\2\2\2\u013b\u0142")
        buf.write("\7\62\2\2\u013c\u013e\4\62;\2\u013d\u013c\3\2\2\2\u013e")
        buf.write("\u013f\3\2\2\2\u013f\u013d\3\2\2\2\u013f\u0140\3\2\2\2")
        buf.write("\u0140\u0142\3\2\2\2\u0141\u013b\3\2\2\2\u0141\u013d\3")
        buf.write("\2\2\2\u0142^\3\2\2\2\u0143\u0145\5a\61\2\u0144\u0143")
        buf.write("\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0144\3\2\2\2\u0146")
        buf.write("\u0147\3\2\2\2\u0147`\3\2\2\2\u0148\u0149\t\2\2\2\u0149")
        buf.write("b\3\2\2\2\u014a\u014c\t\3\2\2\u014b\u014a\3\2\2\2\u014c")
        buf.write("\u014d\3\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2")
        buf.write("\u014e\u014f\3\2\2\2\u014f\u0150\b\62\2\2\u0150d\3\2\2")
        buf.write("\2\7\2\u013f\u0141\u0146\u014d\3\b\2\2")
        return buf.getvalue()


class aiqlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    INT = 46
    STRING = 47
    LETTER = 48
    WS = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'anomaly'", "'('", "')'", "'from'", "'to'", "'as'", "'['", 
            "']'", "'.'", "'before'", "'after'", "'within'", "'with'", "','", 
            "'!'", "'&&'", "'||'", "'ret'", "'count'", "'distinct'", "'group by'", 
            "'having'", "'sort by'", "'asc'", "'desc'", "'top'", "'forward'", 
            "'backward'", "':'", "'->'", "'<-'", "'null'", "'<'", "'>'", 
            "'='", "'<='", "'=>'", "'sum'", "'avg'", "'execute'", "'fail'", 
            "'priv'", "'explicit'", "'shutdown'", "'connect'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "STRING", "LETTER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "INT", "STRING", "LETTER", "WS" ]

    grammarFileName = "aiql.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


